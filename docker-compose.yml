services:
  kafka:
    image: bitnami/kafka:3.5.1-debian-11-r71
    restart: unless-stopped
    ports:
      # porta externa (host) – use outra se 9092 já estiver em uso
      - "9094:9094"
    environment:
      # ==== LISTENERS ======================================================
      # 9092 → rede Docker | 9094 → host
      - KAFKA_CFG_LISTENERS=INTERNAL://:9092,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=INTERNAL://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=INTERNAL

      # ==== DADOS BÁSICOS ==================================================
      - KAFKA_CFG_BROKER_ID=1
      - KAFKA_CFG_NUM_PARTITIONS=3          # padrão p/ *novos* tópicos
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true  # cria tópico se não existir :contentReference[oaicite:1]{index=1}
      - ALLOW_PLAINTEXT_LISTENER=yes

  zookeeper:
    image: bitnami/zookeeper:latest
    ports:
      - 2181:2181
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  
  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    depends_on:
      - kafka
      - zookeeper
    ports:
      - "8080:8080"
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=DataWayBR
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181

  producer:
    container_name: producer
    build:
      context: .
      dockerfile: Dockerfile.producer
    depends_on:
      - kafka

